matrix Px;{
	int[int] I=(0:Ln*Mn-1);
	int[int] J=(-1:Ln*Mn-2);
	int[int] Jc=(0:Ln*Mn-1);
	real[int] mat(Ln*Mn),matc(Ln*Mn);mat=1.;matc=0.;
	for(int i=0;i<Mn;i++) {J(i*Ln)=i*Ln; mat(i*Ln)=2;Jc(i*Ln)=i*Ln+1;matc(i*Ln)=-1;}
	Px=[I,J,mat];
	matrix Pxc = [I,Jc,matc];
	Px=Px+Pxc;	
	Px.resize(Vh.ndof,Vh.ndof);
};

matrix Mx;{
	int[int] I=(0:Ln*Mn-1);
	int[int] J=(1:Ln*Mn);
	int[int] Jc=(0:Ln*Mn-1);
	real[int] mat(Ln*Mn),matc(Ln*Mn);mat=1.;matc=0.;
	for(int i=1;i<=Mn;i++) {J(i*Ln-1)=i*Ln-1;mat(i*Ln-1)=2;Jc(i*Ln-1)=i*Ln-2;matc(i*Ln-1)=-1;}
	Mx=[I,J,mat];
	matrix Mxc = [I,Jc,matc];
	Mx=Mx+Mxc;
	Mx.resize(Vh.ndof,Vh.ndof);//?
};
matrix Py;{
	int[int] I=(0:Ln*Mn-1);
	int[int] D(I.n);D=-Ln;
	int[int] J=I+D;
	int[int] Jc=I;
	J(0:Ln-1)=(0:Ln-1);
	Jc(0:Ln-1)=(Ln:Ln-1+Ln);
	real[int] mat(I.n),matc(I.n);mat=1.;matc=0.;mat(0:Ln-1)=2; matc(0:Ln-1)=-1;//Jc(0:Ln-1)=(Ln:Ln-1+Ln);
	Py=[I,J,mat];
	matrix Pyc = [I,Jc,matc];
	Py=Py+Pyc;
	Py.resize(Vh.ndof,Vh.ndof);
};
matrix My;{
	int[int] I=(0:Ln*Mn-1);
	int[int] D(I.n);D=Ln;
	int[int] J=I+D;
	int[int] Jc=I;
	J(Ln*(Mn-1):Ln*Mn-1)=(Ln*(Mn-1):Ln*Mn-1);
	Jc(Ln*(Mn-1):Ln*Mn-1)=(Ln*(Mn-1)-Ln:Ln*Mn-1-Ln);
	real[int] mat(I.n),matc(I.n);mat=1.;matc=0.;mat(Ln*(Mn-1):Ln*Mn-1)=2; matc(Ln*(Mn-1):Ln*Mn-1)=-1;
	My=[I,J,mat];
	matrix Myc = [I,Jc,matc];
	My=My+Myc;
	My.resize(Vh.ndof,Vh.ndof);
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
matrix Px0;{
	int[int] I=(0:Ln*Mn-1);
	int[int] J=(-1:Ln*Mn-2);
	real[int] mat(Ln*Mn);mat=1.;
	for(int i=0;i<Mn;i++) J(i*Ln)=i*Ln;
	Px0=[I,J,mat];
	Px0.resize(Vh.ndof,Vh.ndof);
};
matrix Mx0;{
	int[int] I=(0:Ln*Mn-1);
	int[int] J=(1:Ln*Mn);
	real[int] mat(Ln*Mn);mat=1.;
	for(int i=1;i<=Mn;i++) J(i*Ln-1)=i*Ln-1;
	Mx0=[I,J,mat];
	Mx0.resize(Vh.ndof,Vh.ndof);//?
};
matrix Py0;{
	int[int] I=(0:Ln*Mn-1);
	int[int] D(I.n);D=-Ln;
	int[int] J=I+D;
	J(0:Ln-1)=(0:Ln-1);
	real[int] mat(I.n);mat=1.;
	Py0=[I,J,mat];
	Py0.resize(Vh.ndof,Vh.ndof);
};
matrix My0;{
	int[int] I=(0:Ln*Mn-1);
	int[int] D(I.n);D=Ln;
	int[int] J=I+D;
	J(Ln*(Mn-1):Ln*Mn-1)=(Ln*(Mn-1):Ln*Mn-1);
	real[int] mat(I.n);mat=1.;
	My0=[I,J,mat];
	My0.resize(Vh.ndof,Vh.ndof);
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////7
// 1/dx and 1/dy matrices
//real deltax=1./(Ln-1),deltay=1./(Mn-1.);
//real deltad=sqrt(deltax^2+deltay^2);
matrix OneOverDx;{
 real[int] d(Vh.ndof);d=1./deltax;OneOverDx=[d];
}
matrix OneOverDy;{
 real[int] d(Vh.ndof);d=1./deltay;OneOverDy=[d];
}

matrix Id;{
	real[int] one(Vh.ndof);one=1.;
	Id=[one];
}

// First order operators
matrix Dpx;{
	real[int] one(Vh.ndof);
	one=-1.;
	matrix One=[one];
	matrix T=Mx+One;
	Dpx=OneOverDx*T;
}
matrix Dmx;{
	real[int] one(Vh.ndof);
	one=-1.;
	matrix One=[one];
	matrix mPx=One*Px;
	matrix T=Id+mPx;
	Dmx=OneOverDx*T;
}
matrix Dpy;{
	real[int] one(Vh.ndof);
	one=-1.;
	matrix One=[one];
	matrix T=My+One;
	Dpy=OneOverDy*T;
}
matrix Dmy;{
	real[int] one(Vh.ndof);
	one=-1.;
	matrix One=[one];
	matrix mPy=One*Py;
	matrix T=Id+mPy;
	Dmy=OneOverDy*T;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
matrix Dpx0;{
	real[int] one(Vh.ndof);
	one=-1.;
	matrix One=[one];
	matrix T=Mx0+One;
	Dpx0=OneOverDx*T;
}
matrix Dmx0;{
	real[int] one(Vh.ndof);
	one=-1.;
	matrix One=[one];
	matrix mPx=One*Px0;
	matrix T=Id+mPx;
	Dmx0=OneOverDx*T;
}
matrix Dpy0;{
	real[int] one(Vh.ndof);
	one=-1.;
	matrix One=[one];
	matrix T=My0+One;
	Dpy0=OneOverDy*T;
}

matrix Dmy0;{
	real[int] one(Vh.ndof);
	one=-1.;
	matrix One=[one];
	matrix mPy=One*Py0;
	matrix T=Id+mPy;
	Dmy0=OneOverDy*T;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

matrix OneOverDx2;{
	OneOverDx2=OneOverDx*OneOverDx;
}
matrix OneOverDy2;{
	OneOverDy2=OneOverDy*OneOverDy;
}
// Second order operators
matrix Dpxx;{
	//Dpxx=(Mx^2-2*Mx+Id)*OnOverDx^2
	matrix Mx2=Mx*Mx;
	real[int] m2(Vh.ndof); m2=-2.;
	matrix m2Id=[m2];
	matrix m2Mx=m2Id*Mx;
	matrix inter1=Mx2+m2Mx;
	matrix inter2=inter1+Id;
	Dpxx=OneOverDx2*inter2;
}

matrix Dmxx;{
	//cout<<1<<endl;
	//Dpxx=(Id-2*Px+2*Px*Px)*OnOverDx^2
	//cout<<Px.Ln<<" "<<Px.m<<endl;
	matrix Px2;
	Px2=Px*Px;
	real[int] m2(Vh.ndof); m2=-2.;
	matrix m2Id=[m2];
	matrix m2Px=m2Id*Px;
	matrix inter1=Px2+m2Px;
	matrix inter2=inter1+Id;
	Dmxx=OneOverDx2*inter2;
}

matrix D0xx;{
	//D0xx=(Px-2*Id+Mx)*OnOverDx^2
	real[int] m2(Vh.ndof); m2=-2.;
	matrix m2Id=[m2];
	matrix inter1=Px+m2Id;
	matrix inter2=inter1+Mx;
	D0xx=OneOverDx2*inter2;
}


matrix Dpyy;{
	//Dpxx=(Mx^2-2*Mx+Id)*OnOverDx^2
	matrix My2=My*My;
	real[int] m2(Vh.ndof); m2=-2.;
	matrix m2Id=[m2];
	matrix m2My=m2Id*My;
	matrix inter1=My2+m2My;
	matrix inter2=inter1+Id;
	Dpyy=OneOverDy2*inter2;
}
matrix Dmyy;{
	//Dpxx=(Id-2*Px+2*Px*Px)*OnOverDx^2
	
	matrix Py2=Py*Py;
	real[int] m2(Vh.ndof); m2=-2.;
	matrix m2Id=[m2];
	matrix m2Py=m2Id*Py;
	matrix inter1=Py2+m2Py;
	matrix inter2=inter1+Id;
	Dmyy=OneOverDy2*inter2;
}
matrix D0yy;{
	//D0yy=(Py-2*Id+My)*OnOverDy^2
	real[int] m2(Vh.ndof); m2=-2.;
	matrix m2Id=[m2];
	matrix inter1=Py+m2Id;
	matrix inter2=inter1+My;
	D0yy=OneOverDy2*inter2;
}

